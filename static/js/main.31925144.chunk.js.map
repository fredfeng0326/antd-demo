{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Image","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","message","success","error","listType","defaultFileList","className","type","Component","Video","state","selectedAttachment","viewAttachment","reader","FileReader","onload","e","newSelectedAttachment","blobData","target","result","includes","setState","readAsDataURL","beforeUpload","showUploadList","newFileList","push","this","length","map","index","onClick","style","cursor","key","playsInline","fluid","width","height","poster","src","Texts","path","preview","data","changeName","value","changePath","files","test","self","readAsText","cols","rows","readOnly","upload","cancel","closeOverlay","accept","rawContentState","Wysiwyg","editorContent","undefined","contentState","editorState","onEditorChange","clearContent","onContentStateChange","onEditorStateChange","imageUploadCallBack","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","FormData","append","send","addEventListener","response","JSON","parse","responseText","gutter","md","title","bordered","toolbarClassName","wrapperClassName","editorClassName","toolbar","history","inDropdown","inline","list","textAlign","image","uploadCallback","placeholder","spellCheck","onFocus","onBlur","onTab","localization","locale","translations","mention","separator","trigger","caseSensitive","suggestions","text","url","page","margin","span","background","overflowY","marginTop","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31925144.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Button} from 'antd';\nimport {Player} from 'video-react';\nimport {Row, Col, Upload, Icon, message, Input, Card} from 'antd';\nimport {Editor} from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nclass Image extends Component {\n    render() {\n        const {Dragger} = Upload;\n        const fileList = [];\n        const props = {\n            name: 'file',\n            multiple: true,\n            action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n            onChange(info) {\n                const {status} = info.file;\n                if (status !== 'uploading') {\n                    console.log(info.file, info.fileList);\n                }\n                if (status === 'done') {\n                    message.success(`${info.file.name} file uploaded successfully.`);\n                } else if (status === 'error') {\n                    message.error(`${info.file.name} file upload failed.`);\n                }\n            },\n            listType: 'picture',\n            defaultFileList: [...fileList],\n        };\n        return (\n            <div className=\"image\">\n                <h3>Upload Image (Drag or Upload,Support multi)</h3>\n                <Dragger {...props}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <Icon type=\"inbox\"/>\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\n                        other\n                        band files\n                    </p>\n                </Dragger>\n            </div>\n        )\n    }\n}\n\nclass Video extends Component {\n    state = {\n        fileList: [],\n        selectedAttachment: null\n    };\n\n    viewAttachment = file => {\n        let reader = new FileReader();\n\n        //if reading completed\n        reader.onload = e => {\n            //set values of selected attachment\n            let newSelectedAttachment = {};\n            newSelectedAttachment.file = file;\n            newSelectedAttachment.blobData = e.target.result;\n\n            //if file type is image then show the attachment or download the same\n            if (file.type.includes(\"video\")) {\n                this.setState({\n                    selectedAttachment: newSelectedAttachment\n                });\n            }\n        };\n\n        //read the file\n        reader.readAsDataURL(file);\n    };\n\n    render() {\n        return (\n            <div className=\"video\">\n                <h3>Upload Video</h3>\n                <Upload\n                    multiple={false}\n                    beforeUpload={e => false}\n                    showUploadList={false}\n                    onChange={info => {\n                        if (info.file.status !== \"uploading\") {\n                            let newFileList = this.state.fileList;\n                            newFileList.push(info.file);\n                            this.setState({\n                                fileList: newFileList\n                            });\n                        }\n                    }}\n                >\n                    <Button>\n                        <Icon type=\"upload\"/> Upload\n                    </Button>\n                </Upload>\n                {this.state.fileList.length > 0 && (\n                    <ul>\n                        {this.state.fileList.map((file, index) => {\n                            return (\n                                <li\n                                    onClick={() => this.viewAttachment(file)}\n                                    style={{cursor: \"pointer\"}}\n                                    key={index}\n                                >\n                                    {file.name}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                )}\n                {this.state.selectedAttachment && (\n                    <Player\n                        playsInline\n                        fluid={false}\n                        width={400}\n                        height={200}\n                        poster=\"/assets/poster.png\"\n                        src={this.state.selectedAttachment.blobData}\n                    />\n                )}\n\n            </div>\n        )\n    }\n}\n\nclass Texts extends Component {\n    state = {\n        name: '',\n        path: '',\n        preview: null,\n        data: null\n    }\n\n    changeName = (e) => {\n        this.setState({name: e.target.value})\n    }\n\n    changePath = (e) => {\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n\n        let src, preview, type = file.type;\n\n        if (/^text\\/\\S+$/.test(type)) {\n            const self = this;\n            const reader = new FileReader();\n            reader.readAsText(file);\n            //注：onload是异步函数，此处需独立处理\n            reader.onload = function (e) {\n                preview = <textarea cols={40} rows={10} value={this.result} readOnly></textarea>\n                self.setState({path: file.name, data: file, preview: preview})\n            }\n            return;\n        }\n\n        this.setState({path: file.name, data: file, preview: preview})\n    }\n\n    // 上传文件\n    upload = () => {\n        const data = this.state.data;\n        if (!data) {\n            console.log('NO file Upload');\n            return;\n        }\n    }\n\n    cancel = () => {\n        this.props.closeOverlay();\n    }\n\n    render() {\n        const {name, path, preview} = this.state\n        return (\n            <div>\n                <h3>Upload Text</h3>\n                <div className='row'>\n                    <div className='row-input'>\n                        <input type='file' accept='text/plain' onChange={this.changePath}/>\n                    </div>\n                </div>\n                <div className='media'>\n                    {preview}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst rawContentState = {\n    \"entityMap\": {\n        \"0\": {\n            \"type\": \"IMAGE\",\n            \"mutability\": \"MUTABLE\",\n            \"data\": {\"src\": \"http://i.imgur.com/aMtBIep.png\", \"height\": \"auto\", \"width\": \"100%\"}\n        }\n    },\n    \"blocks\": [{\n        \"key\": \"9unl6\",\n        \"text\": \"\",\n        \"type\": \"unstyled\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [],\n        \"data\": {}\n    }, {\n        \"key\": \"95kn\",\n        \"text\": \" \",\n        \"type\": \"atomic\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [{\"offset\": 0, \"length\": 1, \"key\": 0}],\n        \"data\": {}\n    }, {\n        \"key\": \"7rjes\",\n        \"text\": \"\",\n        \"type\": \"unstyled\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [],\n        \"data\": {}\n    }]\n};\n\nclass Wysiwyg extends Component {\n    state = {\n        editorContent: undefined,\n        contentState: rawContentState,\n        editorState: '',\n    };\n\n    onEditorChange = (editorContent) => {\n        this.setState({\n            editorContent,\n        });\n    };\n\n    clearContent = () => {\n        this.setState({\n            contentState: '',\n        });\n    };\n\n    onContentStateChange = (contentState) => {\n        console.log('contentState', contentState);\n    };\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    imageUploadCallBack = file => new Promise(\n        (resolve, reject) => {\n            const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n            xhr.open('POST', 'https://api.imgur.com/3/image');\n            xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n            const data = new FormData(); // eslint-disable-line no-undef\n            data.append('image', file);\n            xhr.send(data);\n            xhr.addEventListener('load', () => {\n                const response = JSON.parse(xhr.responseText);\n                resolve(response);\n            });\n            xhr.addEventListener('error', () => {\n                const error = JSON.parse(xhr.responseText);\n                reject(error);\n            });\n        }\n    );\n\n    render() {\n        const {editorContent, editorState} = this.state;\n        return (\n            <div className=\"gutter-example button-demo\">\n                <Row gutter={16}>\n                    <Col className=\"gutter-row\" md={24}>\n                        <div className=\"gutter-box\">\n                            <Card title=\"Rich text editor\" bordered={false}>\n                                <Editor\n                                    editorState={editorState}\n                                    toolbarClassName=\"home-toolbar\"\n                                    wrapperClassName=\"home-wrapper\"\n                                    editorClassName=\"home-editor\"\n                                    onEditorStateChange={this.onEditorStateChange}\n                                    toolbar={{\n                                        history: {inDropdown: true},\n                                        inline: {inDropdown: false},\n                                        list: {inDropdown: true},\n                                        textAlign: {inDropdown: true},\n                                        image: {uploadCallback: this.imageUploadCallBack},\n                                    }}\n                                    onContentStateChange={this.onEditorChange}\n                                    placeholder=\"Write here\"\n                                    spellCheck\n                                    onFocus={() => {\n                                        console.log('focus')\n                                    }}\n                                    onBlur={() => {\n                                        console.log('blur')\n                                    }}\n                                    onTab={() => {\n                                        console.log('tab');\n                                        return true;\n                                    }}\n                                    localization={{locale: 'zh', translations: {'generic.add': 'Test-Add'}}}\n                                    mention={{\n                                        separator: ' ',\n                                        trigger: '@',\n                                        caseSensitive: true,\n                                        suggestions: [\n                                            {text: 'A', value: 'AB', url: 'href-a'},\n                                            {text: 'AB', value: 'ABC', url: 'href-ab'},\n                                            {text: 'ABC', value: 'ABCD', url: 'href-abc'},\n                                            {text: 'ABCD', value: 'ABCDDDD', url: 'href-abcd'},\n                                            {text: 'ABCDE', value: 'ABCDE', url: 'href-abcde'},\n                                            {text: 'ABCDEF', value: 'ABCDEF', url: 'href-abcdef'},\n                                            {text: 'ABCDEFG', value: 'ABCDEFG', url: 'href-abcdefg'},\n                                        ],\n                                    }}\n                                />\n\n                                <style>{`\n                                    .home-editor {\n                                        min-height: 300px;\n                                    }\n                                `}</style>\n                            </Card>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nclass page extends React.Component {\n    render() {\n        return (\n            <div className=\"page\" style={{margin: '10px'}}>\n                <Row gutter={16}>\n                    <Col span={12} style={{background: 'rgba(220, 255, 232, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Image/>\n                        </div>\n                    </Col>\n                    <Col span={12} style={{background: 'rgba(220, 254, 255, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Video/>\n                        </div>\n                    </Col>\n                </Row>\n                <Row gutter={16} style={{marginTop: '10px'}}>\n                    <Col span={10} style={{background: 'rgba(220, 254, 255, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Texts/>\n                        </div>\n                    </Col>\n                    <Col span={14} style={{background: 'rgba(220, 255, 232, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Wysiwyg/>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default page;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"video-react/dist/video-react.css\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}