{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Image","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","message","success","error","listType","defaultFileList","className","type","Component","container","margin","position","canvas","top","left","zIndex","backgroundColor","video","width","height","Video","viewAttachment","reader","FileReader","onload","e","newSelectedAttachment","blobData","target","result","includes","setState","selectedAttachment","readAsDataURL","state","testText","resize_canvas","bind","element","document","getElementById","getContext","ctx","font","strokeStyle","strokeText","this","evt","value","updateInputValue","beforeUpload","showUploadList","newFileList","push","length","map","index","onClick","style","cursor","key","id","controls","onPlay","src","Texts","path","preview","data","changeName","changePath","files","test","self","readAsText","cols","rows","readOnly","upload","cancel","closeOverlay","accept","rawContentState","Wysiwyg","editorContent","undefined","contentState","editorState","onEditorChange","clearContent","onContentStateChange","onEditorStateChange","imageUploadCallBack","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","FormData","append","send","addEventListener","response","JSON","parse","responseText","gutter","md","title","bordered","toolbarClassName","wrapperClassName","editorClassName","toolbar","history","inDropdown","inline","list","textAlign","image","uploadCallback","placeholder","spellCheck","onFocus","onBlur","onTab","localization","locale","translations","mention","separator","trigger","caseSensitive","suggestions","text","url","page","span","background","overflowY","marginTop","React","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9121b22c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Button} from 'antd';\nimport {Player} from 'video-react';\nimport {Row, Col, Upload, Icon, message, Input, Card} from 'antd';\nimport {Editor} from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nclass Image extends Component {\n    render() {\n        const {Dragger} = Upload;\n        const fileList = [];\n        const props = {\n            name: 'file',\n            multiple: true,\n            action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n            onChange(info) {\n                const {status} = info.file;\n                if (status !== 'uploading') {\n                    console.log(info.file, info.fileList);\n                }\n                if (status === 'done') {\n                    message.success(`${info.file.name} file uploaded successfully.`);\n                } else if (status === 'error') {\n                    message.error(`${info.file.name} file upload failed.`);\n                }\n            },\n            listType: 'picture',\n            defaultFileList: [...fileList],\n        };\n        return (\n            <div className=\"image\">\n                <h3>Upload Image (Drag or Upload,Support multi)</h3>\n                <Dragger {...props}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <Icon type=\"inbox\"/>\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\n                        other\n                        band files\n                    </p>\n                </Dragger>\n            </div>\n        )\n    }\n}\n\nconst container = {\n    margin: \"0 auto\",\n    position: \"relative\"\n}\nconst canvas = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    zIndex: '10',\n    backgroundColor: 'rgba(0,0,0,0)'\n}\n\nconst video = {\n    width: '400px',\n    height: '400px',\n    position: 'absolute',\n    top: '0',\n    left: '0'\n}\n\nclass Video extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            fileList: [],\n            selectedAttachment: null,\n            testText: 'TextHere First'\n        };\n        this.resize_canvas = this.resize_canvas.bind(this)\n    }\n\n\n    viewAttachment = file => {\n        let reader = new FileReader();\n\n        //if reading completed\n        reader.onload = e => {\n            //set values of selected attachment\n            let newSelectedAttachment = {};\n            newSelectedAttachment.file = file;\n            newSelectedAttachment.blobData = e.target.result;\n\n            //if file type is image then show the attachment or download the same\n            if (file.type.includes(\"video\")) {\n                this.setState({\n                    selectedAttachment: newSelectedAttachment\n                });\n            }\n        };\n\n        //read the file\n        reader.readAsDataURL(file);\n    };\n\n    resize_canvas(element) {\n        var canvas = document.getElementById(\"cv1\");\n        if (canvas.getContext) {\n            //获取对应的CanvasRenderingContext2D对象(画笔)\n            var ctx = canvas.getContext(\"2d\");\n            //设置字体样式\n            ctx.font = \"30px Courier New\";\n            //设置字体颜色\n            ctx.strokeStyle = \"blue\";\n            //从坐标点(50,50)开始绘制文字\n            ctx.strokeText(this.state.testText, 50, 50);\n        }\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n            testText: evt.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"video\">\n                <h3>Upload Video</h3>\n                <input value={this.state.testText} onChange={evt => this.updateInputValue(evt)}/>\n                <Upload\n                    multiple={false}\n                    beforeUpload={e => false}\n                    showUploadList={false}\n                    onChange={info => {\n                        if (info.file.status !== \"uploading\") {\n                            let newFileList = this.state.fileList;\n                            newFileList.push(info.file);\n                            this.setState({\n                                fileList: newFileList\n                            });\n                        }\n                    }}\n                >\n                    <Button>\n                        <Icon type=\"upload\"/> Upload\n                    </Button>\n                </Upload>\n                {this.state.fileList.length > 0 && (\n                    <ul>\n                        {this.state.fileList.map((file, index) => {\n                            return (\n                                <li\n                                    onClick={() => this.viewAttachment(file)}\n                                    style={{cursor: \"pointer\"}}\n                                    key={index}\n                                >\n                                    {file.name}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                )}\n                <div style={container}>\n                    {this.state.selectedAttachment && (\n                        <video style={video} className=\"video\" id=\"vd1\" width=\"400\" controls\n                               onPlay={this.resize_canvas}>\n                            <source\n                                src={this.state.selectedAttachment.blobData}\n                                type={this.state.selectedAttachment.file.type}\n                            />\n                            Your browser does not support HTML5 video.\n                        </video>\n                    )}\n                    <canvas style={canvas} id='cv1'></canvas>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nclass Texts extends Component {\n    state = {\n        name: '',\n        path: '',\n        preview: null,\n        data: null\n    }\n\n    changeName = (e) => {\n        this.setState({name: e.target.value})\n    }\n\n    changePath = (e) => {\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n\n        let src, preview, type = file.type;\n\n        if (/^text\\/\\S+$/.test(type)) {\n            const self = this;\n            const reader = new FileReader();\n            reader.readAsText(file);\n            //注：onload是异步函数，此处需独立处理\n            reader.onload = function (e) {\n                preview = <textarea cols={40} rows={10} value={this.result} readOnly></textarea>\n                self.setState({path: file.name, data: file, preview: preview})\n            }\n            return;\n        }\n\n        this.setState({path: file.name, data: file, preview: preview})\n    }\n\n    // 上传文件\n    upload = () => {\n        const data = this.state.data;\n        if (!data) {\n            console.log('NO file Upload');\n            return;\n        }\n    }\n\n    cancel = () => {\n        this.props.closeOverlay();\n    }\n\n    render() {\n        const {name, path, preview} = this.state\n        return (\n            <div>\n                <h3>Upload Text</h3>\n                <div className='row'>\n                    <div className='row-input'>\n                        <input type='file' accept='text/plain' onChange={this.changePath}/>\n                    </div>\n                </div>\n                <div>\n                    {preview}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst rawContentState = {\n    \"entityMap\": {\n        \"0\": {\n            \"type\": \"IMAGE\",\n            \"mutability\": \"MUTABLE\",\n            \"data\": {\"src\": \"http://i.imgur.com/aMtBIep.png\", \"height\": \"auto\", \"width\": \"100%\"}\n        }\n    },\n    \"blocks\": [{\n        \"key\": \"9unl6\",\n        \"text\": \"\",\n        \"type\": \"unstyled\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [],\n        \"data\": {}\n    }, {\n        \"key\": \"95kn\",\n        \"text\": \" \",\n        \"type\": \"atomic\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [{\"offset\": 0, \"length\": 1, \"key\": 0}],\n        \"data\": {}\n    }, {\n        \"key\": \"7rjes\",\n        \"text\": \"\",\n        \"type\": \"unstyled\",\n        \"depth\": 0,\n        \"inlineStyleRanges\": [],\n        \"entityRanges\": [],\n        \"data\": {}\n    }]\n};\n\nclass Wysiwyg extends Component {\n    state = {\n        editorContent: undefined,\n        contentState: rawContentState,\n        editorState: '',\n    };\n\n    onEditorChange = (editorContent) => {\n        this.setState({\n            editorContent,\n        });\n    };\n\n    clearContent = () => {\n        this.setState({\n            contentState: '',\n        });\n    };\n\n    onContentStateChange = (contentState) => {\n        console.log('contentState', contentState);\n    };\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    imageUploadCallBack = file => new Promise(\n        (resolve, reject) => {\n            const xhr = new XMLHttpRequest(); // eslint-disable-line no-undef\n            xhr.open('POST', 'https://api.imgur.com/3/image');\n            xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n            const data = new FormData(); // eslint-disable-line no-undef\n            data.append('image', file);\n            xhr.send(data);\n            xhr.addEventListener('load', () => {\n                const response = JSON.parse(xhr.responseText);\n                resolve(response);\n            });\n            xhr.addEventListener('error', () => {\n                const error = JSON.parse(xhr.responseText);\n                reject(error);\n            });\n        }\n    );\n\n    render() {\n        const {editorContent, editorState} = this.state;\n        return (\n            <div className=\"gutter-example button-demo\">\n                <Row gutter={16}>\n                    <Col className=\"gutter-row\" md={24}>\n                        <div className=\"gutter-box\">\n                            <Card title=\"Rich text editor\" bordered={false}>\n                                <Editor\n                                    editorState={editorState}\n                                    toolbarClassName=\"home-toolbar\"\n                                    wrapperClassName=\"home-wrapper\"\n                                    editorClassName=\"home-editor\"\n                                    onEditorStateChange={this.onEditorStateChange}\n                                    toolbar={{\n                                        history: {inDropdown: true},\n                                        inline: {inDropdown: false},\n                                        list: {inDropdown: true},\n                                        textAlign: {inDropdown: true},\n                                        image: {uploadCallback: this.imageUploadCallBack},\n                                    }}\n                                    onContentStateChange={this.onEditorChange}\n                                    placeholder=\"Write here\"\n                                    spellCheck\n                                    onFocus={() => {\n                                        console.log('focus')\n                                    }}\n                                    onBlur={() => {\n                                        console.log('blur')\n                                    }}\n                                    onTab={() => {\n                                        console.log('tab');\n                                        return true;\n                                    }}\n                                    localization={{locale: 'zh', translations: {'generic.add': 'Test-Add'}}}\n                                    mention={{\n                                        separator: ' ',\n                                        trigger: '@',\n                                        caseSensitive: true,\n                                        suggestions: [\n                                            {text: 'A', value: 'AB', url: 'href-a'},\n                                            {text: 'AB', value: 'ABC', url: 'href-ab'},\n                                            {text: 'ABC', value: 'ABCD', url: 'href-abc'},\n                                            {text: 'ABCD', value: 'ABCDDDD', url: 'href-abcd'},\n                                            {text: 'ABCDE', value: 'ABCDE', url: 'href-abcde'},\n                                            {text: 'ABCDEF', value: 'ABCDEF', url: 'href-abcdef'},\n                                            {text: 'ABCDEFG', value: 'ABCDEFG', url: 'href-abcdefg'},\n                                        ],\n                                    }}\n                                />\n\n                                <style>{`\n                                    .home-editor {\n                                        min-height: 300px;\n                                    }\n                                `}</style>\n                            </Card>\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nclass page extends React.Component {\n    render() {\n        return (\n            <div className=\"page\" style={{margin: '10px'}}>\n                <Row gutter={16}>\n                    <Col span={12} style={{background: 'rgba(220, 255, 232, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Image/>\n                        </div>\n                    </Col>\n                    <Col span={12} style={{background: 'rgba(220, 254, 255, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Video/>\n                        </div>\n                    </Col>\n                </Row>\n                <Row gutter={16} style={{marginTop: '10px'}}>\n                    <Col span={10} style={{background: 'rgba(220, 254, 255, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Texts/>\n                        </div>\n                    </Col>\n                    <Col span={14} style={{background: 'rgba(220, 255, 232, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n                            <Wysiwyg/>\n                        </div>\n                    </Col>\n                </Row>\n                <Row gutter={16} style={{marginTop: '10px'}}>\n                    <Col span={24} style={{background: 'rgba(220, 254, 245, 0.6)'}}>\n                        <div style={{overflowY: 'scroll', height: '400px'}}>\n\n                        </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default page;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"video-react/dist/video-react.css\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}